

И получать их внутренние награды. То есть у нас есть категория — это вот категории, и внутренние награды — это как раз-таки сами награды. Здесь они называются в контексте "сап-награды". Категория содержит вариант наград. Получается, вот эти два параметра конфигурации не будут лишними.

Разница, как я говорил, между колесами и лутбоксами (вот этими кейсами) в том, что в колесе только одна награда определяется, а в боксе технически все являются наградами, просто имеют свой шанс на выпадение. То есть вероятность проверяется для карты. Для каждой категории выполняется проверка: активна ли категория. Если категория активируется, определяются награды внутри неё.

А вот в "Фортуне"... да, награда, я не помню, где написано. Сама суть — такая. Поэтому не совсем понятно, что вот здесь получается. Антаж удалил. Access type — free/paid — тоже непонятная история. Все кейсы не бывают "платными" или "бесплатными", их просто можно открыть. Разница лишь в том, что есть отдельная механика, связанная с бесплатным кейсом. Для других кейсов, наверное, тоже будет отдельная какая-то механика. Ну, по крайней мере, у каждого кейса, я так полагаю, будет какая-то специальная механика создаваться, или стандартные — они все будут одинаковые, только бесплатный работает по-другому.

Технически что происходит: у игрока есть какой-то лутбокс, и он содержится в инвентаре. Игрок нажимает "открыть" — вызывается опыт. Что происходит? Мы из инвентаря этот лутбокс удаляем, вычленяем из него награды и выдаём эти награды игроку в инвентарь. Вся логика стандартная: взяли предмет из инвентаря — выдали награды.

С бесплатным кейсом немного по-другому. В инвентаре он не хранится. Из инвентаря ничего не списываем. Здесь списываются биты. У бесплатного кейса ещё есть "здоровье" — это условность. Это здоровье — количество, которое нужно, чтобы открыть. У других кейсов, например, в "Колесе", нужен не один ключ, а сразу много.

Для других кейсов мы будем тоже какой-то персистентный стейт держать. Будут ли они открываться за раз, или тоже нужно сколько-то дней ждать — не все всегда есть. Дальше просто открываются — просто открыл и всё. Никакой больше уникальной механики. Можно чуть-чуть упростить. Только у одного кейса — бесплатного — уникальная механика. Все остальные кейсы идентичны, как кейсы, идентичные в depth за сумку. Получается, у бесплатного кейса будут отдельные кейсы.

Нормально ли, что нужно два отдельных метода, просто чтобы фронту не нужно было, или должен возвращать и прогресс, и награду, если она есть? Просто награда может быть пустой, прогресс — всегда да, будет.

Ты обрати внимание: везде переименовал в "бокс", и в будущем, как мне кажется, может быть коллизия имён. Поэтому я называю "бокс". Я вчера в английской терминологии тоже "бокс". Да-да-да, именно "бокс", потому что, я думаю, может быть коллизия немного в будущем. Вот таким образом — "бокс".

Что есть? Резолвер. Открыть не надо называть "пенята". "Пенята" — это технически визуальное отображение кейса. Это просто какое-то поле у самого бокса, у самого кейса. Поэтому нигде в контексте не стоит упоминать. Есть просто какой-то... ну, можно назвать его бесплатным. Давай пока "Free Lootbox", просто "free lootbox".

Бокс — конечно. Я бы написал как action-мутацию типа GraphQL. Является таким экшеном, командой. Просто он будет возвращать в GraphQL. И рядом были методы, которые относятся к одному поддомену. Хочется, чтобы они были рядом. Поэтому я оставлю в начале название домена. И они всё равно будут в отделе резолвера, а в интерфейсе вот.

Единственное только — что-то в таком формате: `progress` и `reward`, но `reward` — необязательный, и не массив. Вот так вот. `openLootbox()` просто реверс возвращает. Он больше ничего не может вернуть.

А знаешь, что он ещё может вернуть? А, ты убрал `time`? Что убрал приставку? Нет, ты написал: хочу забить про чём бит. `progress` — ну, типа сколько битов осталось. `progress` — не давай просто так называть. `preboxProgressBitBalance` — нормально. `bitCount` лучше. Но ты называл билеты как `ticketCount`. `ticketCount` — здесь также `count` тогда пиши. Только не `ticket`, а именно `bitCount`. Я просто имею в виду, чтобы `count` там и `count` тут — ты как с количеством работаешь.

Что по плану? Да, можно хиты перенять в прогресс тоже. Но странно, что прогресс будет уменьшаться. Наверное, нет. Ты можешь его и увеличивать. Ты можешь оставить `progress`, но ты на байке увеличишь. Просто на фронте он отображается по-другому. Какая разница? Понял?

Это же просто визуальная история. Мы визуально хотим здесь "жизни" показать, но технически это прогресс открытия.

Слушай, а вот в инвентаре, предположим, у игрока есть пять сундуков одного типа, но выпало сразу 5. Они в инвентаре будут иметь один ID или пять разных? Пять сундуков одного типа. Скорее всего, один, одежда к ним будет иметь. Тогда ещё тут count нужен — сколько у нас этих сундуков? `amount`. Вообще, я бы везде `count` или `amount` переименовал — что в битах, что в тикетах.

И здесь можно не писать "в инвентаре", а это `meta`. Сейчас по `inventoryId` будет, там будет чуть-чуть более очевидно. Но лучше писать именно просто `itemMeta`, потому что сундуки бывают только в инвентаре.

Смотри, технически у тебя нет вообще никакой информации о сундуках. Вот здесь я вижу, что ты `rarity` и `level` добавил, но этого не будет. Технически у тебя никакой информации о сундуках нет. У тебя есть только информация о том, что есть какой-то лутбокс. Этот лутбокс — вот его представление в инвентаре через ID-шник, да? Ссылка.

В инвентаре хранится вся информация по этому лутбоксу. Ты не знаешь, как он выглядит, не знаешь, какой он рарности — ничего не знаешь. Ты только знаешь: у тебя есть `abstract`, и над этим `inventoryItemId`. И у тебя есть его награды — типа, что в нём содержится. Потому что что в нём содержится — в инвентаре такой информации нет. В инвентаре есть просто предмет. Этот предмет нельзя ни открыть, ничего из него получить. И ты фактически описываешь лишь маленькую механику открытия этого предмета из инвентаря.

Технически, это дополнительный функционал инвентаря. Понял, да? Конфигурация кейсов, точнее их создание, — она же будет через инвентарь, но награды кейсовые — да, будут у тебя все.

То есть чтобы получить награды, которые есть у этого кейса, мне придётся в инвентарь сходить? Нет, они у тебя все, я же говорю. Ну да, у тебя получается `caseId` и `rewardCollection`. Надо.

Логика — отчасти достаточно простая. Логика — работа только с ревардами. С самими кейсами ты никак не работаешь. Ну и отдельно логика есть при работе с бесплатными кейсами. То есть бесплатный кейс — это уже вся твоя механика. Там в инвентарь не надо ходить, ничего там делать. Но это технически — ты тоже будешь хранить и ходить в инвентарь только для того, чтобы уникальные предметы, если будешь выдавать, — проверить, есть они у игрока или нет. А так — тоже никакого особо взаимодействия с инвентарем не будет. Оно посредственное.

Ну, это, наверное, избавлюсь от наследования. Здесь всегда не имеет смысла. У лутбоксов должны быть параметры определённые. Должен быть `itemId`. А это — мод? Должен быть? Ну, честно, ты не знаешь, что такое. Это ID-шник конфигурации, получается? Или мы возьмём... А, или `chestId` будет соответствовать `inventoryItemId`? Да нет. Я думаю, у него просто свой какой-то ID-шник должен быть. Какой-то человекопонятный. И желательно чего?

Да, `abstract` конфигурирование. Наверное, такой подход. Да, не думал. Ну, вот допустим `amount` должен быть. А потому что... а подожди. Это игрок тогда получается. Так, тогда я здесь правлю, здесь немножко. Итак, нужно вот так вот, да? Есть `chest`, фактически, с `id`. Вот такая история. Это ссылочка. Когда у тебя 10, там один — это так вот получается. А это типа юзер. То есть просто "бокс" — абстракция. И я использую `skillBox`. Это ссылка на `lootBox` и `amount`, ссылка на `loot`.

Что у тебя ещё может быть? Как будто бы всё. Ну и за открытие стоит удалять эти лутбоксы, наверное, да? То есть юзер открыл — мы отсюда удалили. И вместе с этим из инвентаря у него заберём. Что отсюда удалять-то? Они даже не хранятся здесь. Не хранятся. Они же в инвентаре.

Тут технически, когда `userLootbox`, это просто интерфейс. Ты агрегируешь все лутбоксы одного типа. Просто для фронта в таком виде отдаёшь. Думаю, и всё. Поэтому `id` должен быть стринговый, чтобы они там могли отрисовать его на основании ID-шника. И отрисовывать его будут на основании `itemId`. И с `inventoryItemId`, получается, информацию.

Поэтому это всё из инвентаря. Один запрос — и они сразу твои лутбоксы получат. И через сам запрос достанут из инвентаря всю инфу.

Поэтому вот это всё сверху — у тебя ничего не нужно. Это всё `lootbox`, `freeLootboxProgress`. Хранишь это в стейте — `progress`, `count`.

Ну, это вот здесь, да. Надо будет поменять тоже. Что там? `lootbox`, `userLootbox`, `progress`, `amount`. Я бы, говорю, назвал `amount` и в тикетах. Я тоже, наверное, `amount`. Всё, в принципе — всё, что есть.

Ну и второе — это уже все награды. Какие есть категории, какие шансы, какие награды — туда-сюда. Разница лишь в чём? В том, что в "Колесе фортуны", так как два колеса фортуны, то там 2 — статичные. А в лутбоксах категории и шансы — они привязаны по многим `lootbox`. То есть в "Колесе фортуны" — всегда известны. Там просто привязываешь к колёсам по типам: есть обычные, есть элитные. А в лутбоксах — привязка по ID-шнику. В лутбоксах.

Окей, так. ID-шник по `lootbox` сделаем. Просто на бренды. Да, да — это не особо важно. Просто набор.

Ладно-ладно, я тогда обновлю эту диаграммку и начну заниматься задачами. Может, созвонимся ещё раз. Я тебе во вторник покажу, что у меня будет к тому моменту.

Окей. Я там бегло вчера начинал смотреть "Колесо фортуны", но сейчас со временем очень… Поэтому надо много времени посвятить. Там очень много теологии. Чаще чуть-чуть стоит обсудить архитектуру. Вчера этим занимался.

---

Если хочешь, могу потом разбить и **структурировать по блокам и смыслу**, если текст нужен в более понятном виде (например, для документации или пересказа).
